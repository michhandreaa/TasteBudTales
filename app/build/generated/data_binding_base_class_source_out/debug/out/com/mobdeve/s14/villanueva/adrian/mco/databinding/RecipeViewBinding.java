// Generated by view binder compiler. Do not edit!
package com.mobdeve.s14.villanueva.adrian.mco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.mobdeve.s14.villanueva.adrian.mco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecipeViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText addCaption;

  @NonNull
  public final LinearLayout addReviewLayout;

  @NonNull
  public final Button cameraUploadBtn;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ImageView homePageBtn;

  @NonNull
  public final Button imageUploadBtn;

  @NonNull
  public final ConstraintLayout ingredientsLayout;

  @NonNull
  public final ConstraintLayout instructionsLayout;

  @NonNull
  public final ImageView ivRecipeImage;

  @NonNull
  public final FloatingActionButton likeBtn;

  @NonNull
  public final TextView listInstructions;

  @NonNull
  public final TextView listOfIngredients;

  @NonNull
  public final ImageButton postButton;

  @NonNull
  public final ImageView profilePageBtn2;

  @NonNull
  public final ConstraintLayout reviewsLayout;

  @NonNull
  public final ConstraintLayout reviewsRecyclerView;

  @NonNull
  public final ImageView searchPageBtn;

  @NonNull
  public final ConstraintLayout topLayout;

  @NonNull
  public final TextView tvInstructions;

  @NonNull
  public final TextView tvListOfIngredients;

  @NonNull
  public final TextView tvRecipeCategory;

  @NonNull
  public final TextView tvRecipeLikes;

  @NonNull
  public final TextView tvRecipename;

  @NonNull
  public final TextView tvReviews;

  private RecipeViewBinding(@NonNull RelativeLayout rootView, @NonNull EditText addCaption,
      @NonNull LinearLayout addReviewLayout, @NonNull Button cameraUploadBtn,
      @NonNull ConstraintLayout constraintLayout, @NonNull ImageView homePageBtn,
      @NonNull Button imageUploadBtn, @NonNull ConstraintLayout ingredientsLayout,
      @NonNull ConstraintLayout instructionsLayout, @NonNull ImageView ivRecipeImage,
      @NonNull FloatingActionButton likeBtn, @NonNull TextView listInstructions,
      @NonNull TextView listOfIngredients, @NonNull ImageButton postButton,
      @NonNull ImageView profilePageBtn2, @NonNull ConstraintLayout reviewsLayout,
      @NonNull ConstraintLayout reviewsRecyclerView, @NonNull ImageView searchPageBtn,
      @NonNull ConstraintLayout topLayout, @NonNull TextView tvInstructions,
      @NonNull TextView tvListOfIngredients, @NonNull TextView tvRecipeCategory,
      @NonNull TextView tvRecipeLikes, @NonNull TextView tvRecipename,
      @NonNull TextView tvReviews) {
    this.rootView = rootView;
    this.addCaption = addCaption;
    this.addReviewLayout = addReviewLayout;
    this.cameraUploadBtn = cameraUploadBtn;
    this.constraintLayout = constraintLayout;
    this.homePageBtn = homePageBtn;
    this.imageUploadBtn = imageUploadBtn;
    this.ingredientsLayout = ingredientsLayout;
    this.instructionsLayout = instructionsLayout;
    this.ivRecipeImage = ivRecipeImage;
    this.likeBtn = likeBtn;
    this.listInstructions = listInstructions;
    this.listOfIngredients = listOfIngredients;
    this.postButton = postButton;
    this.profilePageBtn2 = profilePageBtn2;
    this.reviewsLayout = reviewsLayout;
    this.reviewsRecyclerView = reviewsRecyclerView;
    this.searchPageBtn = searchPageBtn;
    this.topLayout = topLayout;
    this.tvInstructions = tvInstructions;
    this.tvListOfIngredients = tvListOfIngredients;
    this.tvRecipeCategory = tvRecipeCategory;
    this.tvRecipeLikes = tvRecipeLikes;
    this.tvRecipename = tvRecipename;
    this.tvReviews = tvReviews;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecipeViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecipeViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recipe_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecipeViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addCaption;
      EditText addCaption = ViewBindings.findChildViewById(rootView, id);
      if (addCaption == null) {
        break missingId;
      }

      id = R.id.addReviewLayout;
      LinearLayout addReviewLayout = ViewBindings.findChildViewById(rootView, id);
      if (addReviewLayout == null) {
        break missingId;
      }

      id = R.id.cameraUploadBtn;
      Button cameraUploadBtn = ViewBindings.findChildViewById(rootView, id);
      if (cameraUploadBtn == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.homePageBtn;
      ImageView homePageBtn = ViewBindings.findChildViewById(rootView, id);
      if (homePageBtn == null) {
        break missingId;
      }

      id = R.id.imageUploadBtn;
      Button imageUploadBtn = ViewBindings.findChildViewById(rootView, id);
      if (imageUploadBtn == null) {
        break missingId;
      }

      id = R.id.ingredientsLayout;
      ConstraintLayout ingredientsLayout = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsLayout == null) {
        break missingId;
      }

      id = R.id.instructionsLayout;
      ConstraintLayout instructionsLayout = ViewBindings.findChildViewById(rootView, id);
      if (instructionsLayout == null) {
        break missingId;
      }

      id = R.id.iv_recipeImage;
      ImageView ivRecipeImage = ViewBindings.findChildViewById(rootView, id);
      if (ivRecipeImage == null) {
        break missingId;
      }

      id = R.id.likeBtn;
      FloatingActionButton likeBtn = ViewBindings.findChildViewById(rootView, id);
      if (likeBtn == null) {
        break missingId;
      }

      id = R.id.list_instructions;
      TextView listInstructions = ViewBindings.findChildViewById(rootView, id);
      if (listInstructions == null) {
        break missingId;
      }

      id = R.id.list_of_ingredients;
      TextView listOfIngredients = ViewBindings.findChildViewById(rootView, id);
      if (listOfIngredients == null) {
        break missingId;
      }

      id = R.id.postButton;
      ImageButton postButton = ViewBindings.findChildViewById(rootView, id);
      if (postButton == null) {
        break missingId;
      }

      id = R.id.profilePageBtn2;
      ImageView profilePageBtn2 = ViewBindings.findChildViewById(rootView, id);
      if (profilePageBtn2 == null) {
        break missingId;
      }

      id = R.id.reviewsLayout;
      ConstraintLayout reviewsLayout = ViewBindings.findChildViewById(rootView, id);
      if (reviewsLayout == null) {
        break missingId;
      }

      id = R.id.reviewsRecyclerView;
      ConstraintLayout reviewsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (reviewsRecyclerView == null) {
        break missingId;
      }

      id = R.id.searchPageBtn;
      ImageView searchPageBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchPageBtn == null) {
        break missingId;
      }

      id = R.id.topLayout;
      ConstraintLayout topLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLayout == null) {
        break missingId;
      }

      id = R.id.tv_instructions;
      TextView tvInstructions = ViewBindings.findChildViewById(rootView, id);
      if (tvInstructions == null) {
        break missingId;
      }

      id = R.id.tv_list_of_ingredients;
      TextView tvListOfIngredients = ViewBindings.findChildViewById(rootView, id);
      if (tvListOfIngredients == null) {
        break missingId;
      }

      id = R.id.tv_recipeCategory;
      TextView tvRecipeCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvRecipeCategory == null) {
        break missingId;
      }

      id = R.id.tv_recipe_likes;
      TextView tvRecipeLikes = ViewBindings.findChildViewById(rootView, id);
      if (tvRecipeLikes == null) {
        break missingId;
      }

      id = R.id.tv_recipename;
      TextView tvRecipename = ViewBindings.findChildViewById(rootView, id);
      if (tvRecipename == null) {
        break missingId;
      }

      id = R.id.tv_reviews;
      TextView tvReviews = ViewBindings.findChildViewById(rootView, id);
      if (tvReviews == null) {
        break missingId;
      }

      return new RecipeViewBinding((RelativeLayout) rootView, addCaption, addReviewLayout,
          cameraUploadBtn, constraintLayout, homePageBtn, imageUploadBtn, ingredientsLayout,
          instructionsLayout, ivRecipeImage, likeBtn, listInstructions, listOfIngredients,
          postButton, profilePageBtn2, reviewsLayout, reviewsRecyclerView, searchPageBtn, topLayout,
          tvInstructions, tvListOfIngredients, tvRecipeCategory, tvRecipeLikes, tvRecipename,
          tvReviews);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
