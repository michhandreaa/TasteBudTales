// Generated by view binder compiler. Do not edit!
package com.mobdeve.s14.villanueva.adrian.mco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mobdeve.s14.villanueva.adrian.mco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HomeSeeAllPerCategoriesRecipesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout categoriesLayout;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final RecyclerView recipeRecyclerview;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvCategoryName;

  private HomeSeeAllPerCategoriesRecipesBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout categoriesLayout, @NonNull LinearLayout linearLayout3,
      @NonNull RecyclerView recipeRecyclerview, @NonNull TextView tvCategory,
      @NonNull TextView tvCategoryName) {
    this.rootView = rootView;
    this.categoriesLayout = categoriesLayout;
    this.linearLayout3 = linearLayout3;
    this.recipeRecyclerview = recipeRecyclerview;
    this.tvCategory = tvCategory;
    this.tvCategoryName = tvCategoryName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomeSeeAllPerCategoriesRecipesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomeSeeAllPerCategoriesRecipesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.home_see_all_per_categories_recipes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomeSeeAllPerCategoriesRecipesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout categoriesLayout = (ConstraintLayout) rootView;

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.recipe_recyclerview;
      RecyclerView recipeRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (recipeRecyclerview == null) {
        break missingId;
      }

      id = R.id.tv_category;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_category_name;
      TextView tvCategoryName = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryName == null) {
        break missingId;
      }

      return new HomeSeeAllPerCategoriesRecipesBinding((ConstraintLayout) rootView,
          categoriesLayout, linearLayout3, recipeRecyclerview, tvCategory, tvCategoryName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
